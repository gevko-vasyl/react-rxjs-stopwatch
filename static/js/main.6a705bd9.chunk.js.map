{"version":3,"sources":["components/ControlButtons/ControlButtons.jsx","components/Timer/Timer.jsx","App.jsx","index.js"],"names":["ControlButtons","start","stop","reset","wait","status","className","onClick","disabled","e","timer","clearTimeout","setTimeout","detail","Timer","time","Date","toISOString","substr","App","useState","setTime","isActive","setIsActive","setStatus","useEffect","unsubscribe$","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGe,SAASA,EAAT,GAA+D,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OAMjE,OACE,sBAAKC,UAAU,6BAAf,UACc,IAAXD,EACC,gCACE,wBAAQE,QAASN,EAAjB,mBACA,wBAAQO,UAAQ,EAAhB,kBACA,wBAAQA,UAAQ,EAAhB,sBAGF,GAEU,IAAXH,EACC,gCACE,wBAAQE,QAASL,EAAjB,kBACA,wBAAQK,QAnBU,SAAAE,GACxB,IAAIC,EACJC,aAAaD,GACbA,EAAQE,WAAWR,EAAM,IAAKK,EAAEI,SAgB1B,kBACA,wBAAQN,QAASJ,EAAjB,sBAGF,GAEU,IAAXE,EACC,gCACE,wBAAQE,QAASN,EAAjB,mBACA,wBAAQO,UAAQ,EAAhB,kBACA,wBAAQA,UAAQ,EAAhB,sBAGF,GAEU,IAAXH,EACC,gCACE,wBAAQE,QAASN,EAAjB,sBACA,wBAAQO,UAAQ,EAAhB,kBACA,wBAAQD,QAASJ,EAAjB,sBAGF,M,MC1CO,SAASW,EAAT,GAA0B,IAATC,EAAQ,EAARA,KAC9B,OACE,qBAAKT,UAAU,mBAAf,SACE,sBAAMA,UAAU,cAAhB,SAA+B,IAAIU,KAAY,IAAPD,GAAaE,cAAcC,OAAO,GAAI,OCCrE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOL,EAAP,KAAaM,EAAb,KACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAA4BH,mBAAS,GAArC,mBAAOf,EAAP,KAAemB,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAe,IAAIC,IAQzB,OAPAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACLT,GACFD,GAAQ,SAAAW,GAAG,OAAIA,EAAM,QAGpB,WACLN,EAAaO,OACbP,EAAaQ,cAEd,CAACZ,IA2BJ,OACE,sBAAKhB,UAAU,YAAf,UACE,cAAC,EAAD,CAAOS,KAAMA,IACb,cAAC,EAAD,CACEd,MA7Bc,WAClBsB,GAAY,GACZC,EAAU,IA4BNtB,KAzBa,WACjBqB,GAAY,GACZF,EAAQ,GACRG,EAAU,IAuBNrB,MAXc,WAClBkB,EAAQ,GACRE,GAAY,GACZC,EAAU,IASNpB,KArBa,SAAAK,GACjB0B,QAAQC,IAAI3B,GACF,IAANA,IAGJc,GAAY,GACZC,EAAU,KAgBNnB,OAAQA,O,YCtDhBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpB,EAAD,MAEFqB,SAASC,eAAe,W","file":"static/js/main.6a705bd9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ControlButtons.scss';\r\n\r\nexport default function ControlButtons({ start, stop, reset, wait, status }) {\r\n  const handleDoubleClick = e => {\r\n    let timer;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(wait, 299, e.detail);\r\n  };\r\n  return (\r\n    <div className='ControllButtons__container'>\r\n      {status === 0 ? (\r\n        <div>\r\n          <button onClick={start}>Start</button>\r\n          <button disabled>Wait</button>\r\n          <button disabled>Reset</button>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {status === 1 ? (\r\n        <div>\r\n          <button onClick={stop}>Stop</button>\r\n          <button onClick={handleDoubleClick}>Wait</button>\r\n          <button onClick={reset}>Reset</button>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {status === 2 ? (\r\n        <div>\r\n          <button onClick={start}>Start</button>\r\n          <button disabled>Wait</button>\r\n          <button disabled>Reset</button>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {status === 3 ? (\r\n        <div>\r\n          <button onClick={start}>Continue</button>\r\n          <button disabled>Wait</button>\r\n          <button onClick={reset}>Reset</button>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Timer.scss';\r\n\r\nexport default function Timer({ time }) {\r\n  return (\r\n    <div className='Timer__container'>\r\n      <span className='Timer__text'>{new Date(time * 1000).toISOString().substr(11, 8)}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { interval, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport ControlButtons from './components/ControlButtons/ControlButtons';\nimport Timer from './components/Timer/Timer';\n\nexport default function App() {\n  const [time, setTime] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [status, setStatus] = useState(0);\n\n  useEffect(() => {\n    const unsubscribe$ = new Subject();\n    interval(1000)\n      .pipe(takeUntil(unsubscribe$))\n      .subscribe(() => {\n        if (isActive) {\n          setTime(val => val + 1);\n        }\n      });\n    return () => {\n      unsubscribe$.next();\n      unsubscribe$.complete();\n    };\n  }, [isActive]);\n\n  const handleStart = () => {\n    setIsActive(true);\n    setStatus(1);\n  };\n\n  const handleStop = () => {\n    setIsActive(false);\n    setTime(0);\n    setStatus(2);\n  };\n\n  const handleWait = e => {\n    console.log(e);\n    if (e !== 2) {\n      return;\n    }\n    setIsActive(false);\n    setStatus(3);\n  };\n\n  const handleReset = () => {\n    setTime(0);\n    setIsActive(true);\n    setStatus(1);\n  };\n  return (\n    <div className='Stopwatch'>\n      <Timer time={time} />\n      <ControlButtons\n        start={handleStart}\n        stop={handleStop}\n        reset={handleReset}\n        wait={handleWait}\n        status={status}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}